package com.trendyol.shoppingcart.base;import org.junit.Before;import org.junit.Test;import java.util.HashSet;import java.util.Set;import static org.junit.Assert.*;public class CategoryTest {    private ICategory men;    private ICategory clothing;    private ICategory sweatShirt;    private Set<ICategory> childCategories;    private Set<ICategory> categories;    @Before    public void setUp() throws Exception {        men = new Category("Men");        clothing = new Category("Clothing");        sweatShirt = new Category("Sweat Shirt");        childCategories = new HashSet<>();        categories = new HashSet<>();    }    @Test    public void getTitle() {        assertEquals("Clothing", clothing.getTitle());        assertEquals("Sweat Shirt", sweatShirt.getTitle());        assertEquals("Men", men.getTitle());    }    @Test    public void getParentCategory() {        sweatShirt.setParentCategory(clothing);        assertEquals("Clothing", sweatShirt.getParentCategory().getTitle());        assertEquals(this.clothing, sweatShirt.getParentCategory());    }    @Test    public void getChildCategories() {        childCategories.add(clothing);        childCategories.add(sweatShirt);        men.setChildCategories(childCategories);        assertEquals(men.getChildCategories(), childCategories);    }    @Test    public void getALlCategory() {        //Todo getALlCategory MEthod null check        categories.add(clothing);        categories.add(sweatShirt);        categories.add(men);        categories.add(null);        childCategories.add(clothing);        childCategories.add(sweatShirt);        men.setChildCategories(childCategories);        assertEquals(categories, men.getALlCategory());    }    @Test    public void setTitle() {        clothing.setTitle("CLotHing");        sweatShirt.setTitle("sweatShirt");        assertEquals("CLotHing", clothing.getTitle());        assertEquals("sweatShirt", sweatShirt.getTitle());    }    @Test    public void setParentCategory() {        sweatShirt.setParentCategory(clothing);        assertEquals(this.clothing, sweatShirt.getParentCategory());    }    @Test    public void setChildCategories() {        childCategories.add(clothing);        childCategories.add(sweatShirt);        men.setChildCategories(childCategories);        assertEquals(childCategories, men.getChildCategories());    }}
package com.trendyol.shoppingcart.cart;import com.trendyol.shoppingcart.base.*;import com.trendyol.shoppingcart.delivery.DeliveryCostCalculator;import com.trendyol.shoppingcart.enums.DiscountType;import org.junit.Before;import org.junit.Test;import java.util.LinkedHashMap;import java.util.Map;import java.util.stream.Collectors;import static org.junit.Assert.*;public class ShoppingCartTest {private ShoppingCart cart;private IProduct apple,almond;private ICategory food;private Map<IProduct,Integer> products;private  Campaign campaign;private DeliveryCostCalculator deliveryCostCalculator;    @Before    public void setUp() throws Exception {        products=new LinkedHashMap<>();        cart=new ShoppingCart();        food=new Category("Food");        almond=new Product("Almond",100.0,food);        apple=new Product("Apple",150.0,food);        products.put(almond,4);        products.put(apple,3);        cart.addItem(almond,4);        cart.addItem(apple,3);       campaign=new Campaign(food,20.0,3, DiscountType.RATE);    }    @Test    public void addItem() {        assertEquals(products,cart.getProducts());    }    @Test    public void totalPrice() {        double totalPrice=cart.totalPrice();        assertEquals(850,totalPrice,0);    }    @Test    public void retrieveGroupedProductsByCategory(){        cart.retrieveGroupedProductsByCategory();        assertEquals(2, cart.getGroupedProductsByCategory().get(food).size());    }    @Test    public void removeItem(){        cart.removeItem(almond,1);        cart.removeItem(apple,3);        products=cart.getProducts();        assertEquals(1,cart.getProducts().size());        assertEquals(new Integer(3),cart.getProducts().get(almond));    }    @Test     public void getNumberOfProduct(){       int numOfProduct= cart.getNumberOfProduct();        assertEquals(7,numOfProduct);    }    @Test    public void getNumberOfDifferentProduct() {        int numberOfDifferentProduct=cart.getNumberOfDifferentProduct();        assertEquals(2,numberOfDifferentProduct);    }        @Test    public void applyDiscount(){    /*    double delivery=deliveryCostCalculator.calculateFor(cart);    assertEquals(1,1);*/    }}
package com.trendyol.shoppingcart.cart;import com.trendyol.shoppingcart.campaign.Campaign;import com.trendyol.shoppingcart.campaign.CampaignComponent;import com.trendyol.shoppingcart.category.CategoryComponent;import com.trendyol.shoppingcart.discount.withcampaign.IDiscountStrategy;import com.trendyol.shoppingcart.product.*;import com.trendyol.shoppingcart.category.Category;import com.trendyol.shoppingcart.delivery.DeliveryCostCalculator;import com.trendyol.shoppingcart.enums.DiscountType;import org.junit.Before;import org.junit.Test;import java.util.ArrayList;import java.util.LinkedHashMap;import java.util.List;import java.util.Map;import static org.junit.Assert.*;public class ShoppingCartTest {    private ShoppingCart cart;    private ProductComponent apple, almond, macPro, gamingMouse;    private CategoryComponent food;    private CategoryComponent technology;    private Map<ProductComponent, Integer> products;    private CampaignComponent _20DiscountOnMoreThan3;  //   "_" --> %20 amount    private CampaignComponent __5DiscountOnMoreThan5;  // "__" --> -5 rate    private DeliveryCostCalculator deliveryCostCalculator;    private List<CampaignComponent> campaigns;    private List<IDiscountStrategy> IDiscountStrategy;    @Before    public void setUp() throws Exception {        food = new Category("Food");        almond = new Product("Almond", 100.0, food);        apple = new Product("Apple", 150.0, food);        technology = new Category("Technology");        macPro = new Product("MacPro", 8000d, technology);        gamingMouse = new Product("Gaming Mouse", 50d, technology);        products = new LinkedHashMap<>();        products.put(almond, 4);        products.put(apple, 3);        cart = new ShoppingCart();        cart.addItem(almond, 4);        cart.addItem(apple, 3);        _20DiscountOnMoreThan3 = new Campaign(food, 20.0, 3, DiscountType.AMOUNT);        __5DiscountOnMoreThan5 = new Campaign(technology, 5, 5, DiscountType.RATE);        campaigns = new ArrayList<>();        campaigns.add(_20DiscountOnMoreThan3);        campaigns.add(__5DiscountOnMoreThan5);    }    @Test    public void addItem() {        assertEquals(products, cart.getProducts());    }    @Test    public void totalPrice() {        double totalPrice = cart.totalAmount();        assertEquals(850, totalPrice, 0);    }    @Test    public void removeItem() {        cart.removeItem(almond, 1);        cart.removeItem(apple, 3);        products = cart.getProducts();        assertEquals(1, cart.getProducts().size());        assertEquals(new Integer(3), cart.getProducts().get(almond));    }    @Test    public void getNumberOfProduct() {        int numOfProduct = cart.getNumberOfProduct();        assertEquals(7, numOfProduct);    }    @Test    public void getNumberOfDifferentProduct() {        int numberOfDifferentProduct = cart.getNumberOfDifferentProduct();        assertEquals(2, numberOfDifferentProduct);    }    @Test    public void print() {    }    @Test    public void applyDiscount() {        cart.applyDiscount(campaigns);        cart.print();        assertEquals(1, 1);    }}
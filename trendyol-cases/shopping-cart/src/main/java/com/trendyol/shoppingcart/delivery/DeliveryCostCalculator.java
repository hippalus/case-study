package com.trendyol.shoppingcart.delivery;import com.trendyol.shoppingcart.cart.ShoppingCart;import java.util.Objects;public class DeliveryCostCalculator {    private double costPerDelivery;    private double numberOfDeliveries;    private double costPerProduct;    private double fixedCost;    private double numberOfProduct;    private static volatile DeliveryCostCalculator INSTANCE = null;    public DeliveryCostCalculator(double costPerDelivery, double costPerProduct, double fixedCost) {        this.costPerDelivery = costPerDelivery;        this.costPerProduct = costPerProduct;        this.fixedCost = fixedCost;    }    public static DeliveryCostCalculator getInstance(double costPerDelivery, double costPerProduct, double fixedCost) {        if (Objects.isNull(INSTANCE)) {            //double check locking            synchronized (DeliveryCostCalculator.class) {                if (Objects.isNull(INSTANCE)) {                    INSTANCE = new DeliveryCostCalculator(costPerDelivery, costPerProduct, fixedCost);                }            }        }        return INSTANCE;    }   public double calculateFor(ShoppingCart cart) {        this.numberOfProduct = cart.getNumberOfDifferentProduct();        this.numberOfDeliveries = cart.getNumberOfDifferentCategory();        return calculateByFormula();    }    /**     * Formula is ( CostPerDelivery * NumberOfDeliveries ) + (CostPerProduct * NumberOfProducts) + Fixed Cost     * arg Fixed cost is 2.99 TL.     *     * @return Delivery Cost     */    private double calculateByFormula() {        return ((this.costPerDelivery * this.numberOfDeliveries) * (this.costPerProduct * this.numberOfProduct) + this.fixedCost);    }}